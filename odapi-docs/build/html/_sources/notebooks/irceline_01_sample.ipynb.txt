{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Time Series Sampling\n",
    "\n",
    "## Introduction\n",
    "\n",
    "Open Data API (abbreviated to `odapi`) provides convenient interfaces such as the `TimeSerieAPI` interface to make time series management easier to the end user. \n",
    "\n",
    "Those interfaces are derived to create connectors such as the `Irceline` connector. As a first example, we will download a trial dataset from the [Irceline][1] [API][2] using the eponymous connector. Dataset created will be used in subequent notebooks to show time series capabilities of the package.\n",
    "\n",
    "[1]: https://www.irceline.be/en\n",
    "[2]: https://github.com/irceline/open_data\n",
    "\n",
    "### Import package\n",
    "\n",
    "All we need is to import the `Irceline` connector form the `odapi` package:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from odapi.connectors import Irceline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Additionally, we may silence logs as `odapi` package is bit verbose:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from odapi.settings import settings\n",
    "settings.logger.setLevel(40)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create connector\n",
    "\n",
    "Create a instance of `Irceline` connector to control the Irceline underlying API:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "client = Irceline()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we are ready to use the Open Data API."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create Dataset\n",
    "\n",
    "Now we will create a typical Air Quality Dataset to feed subsequent examples. We will sample Air Quality Data of Brussels City (Central Europe) for the 2014 civil year.\n",
    "\n",
    "### Metadata\n",
    "\n",
    "All interfaces from `odapi` exposes metadata. We fetch the metadata from the Irceline API to se what it holds. Because we are dealing with air quality time series, metadata will looks like measurment channels. We sample 10 channels at random and show the 8 first columns:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>serieid</th>\n",
       "      <th>siteid</th>\n",
       "      <th>measureid</th>\n",
       "      <th>serieunits</th>\n",
       "      <th>measurekey</th>\n",
       "      <th>measurename</th>\n",
       "      <th>sitekey</th>\n",
       "      <th>sitename</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>313</th>\n",
       "      <td>10866</td>\n",
       "      <td>1713</td>\n",
       "      <td>6002</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>PM-1.0</td>\n",
       "      <td>Particulate Matter &lt; 1 µm</td>\n",
       "      <td>42R805</td>\n",
       "      <td>Antwerpen (Belgiëlei)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>495</th>\n",
       "      <td>10814</td>\n",
       "      <td>1713</td>\n",
       "      <td>62106</td>\n",
       "      <td>%</td>\n",
       "      <td>RH</td>\n",
       "      <td>relative humidity</td>\n",
       "      <td>42R805</td>\n",
       "      <td>Antwerpen (Belgiëlei)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>229</th>\n",
       "      <td>7073</td>\n",
       "      <td>1207</td>\n",
       "      <td>38</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>NO</td>\n",
       "      <td>Nitrogen monoxide</td>\n",
       "      <td>44R701</td>\n",
       "      <td>Gent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>364</th>\n",
       "      <td>6643</td>\n",
       "      <td>1124</td>\n",
       "      <td>5</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>PM-10.0</td>\n",
       "      <td>Particulate Matter &lt; 10 µm</td>\n",
       "      <td>41WOL1</td>\n",
       "      <td>Wol.St.L.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>6955</td>\n",
       "      <td>1183</td>\n",
       "      <td>8</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>NO2</td>\n",
       "      <td>Nitrogen dioxide</td>\n",
       "      <td>43N113</td>\n",
       "      <td>Sainte-Ode</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>10837</td>\n",
       "      <td>1736</td>\n",
       "      <td>38</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>NO</td>\n",
       "      <td>Nitrogen monoxide</td>\n",
       "      <td>RMBX03</td>\n",
       "      <td>Bruxelles (Brouckere)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>6514</td>\n",
       "      <td>1112</td>\n",
       "      <td>10</td>\n",
       "      <td>mg/m³</td>\n",
       "      <td>CO</td>\n",
       "      <td>Carbon Monoxide</td>\n",
       "      <td>41B006</td>\n",
       "      <td>Bruxelles (Parlement UE)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>276</th>\n",
       "      <td>6969</td>\n",
       "      <td>1185</td>\n",
       "      <td>7</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>O3</td>\n",
       "      <td>Ozone</td>\n",
       "      <td>43N132</td>\n",
       "      <td>Habay-La-Neuve</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200</th>\n",
       "      <td>6775</td>\n",
       "      <td>1147</td>\n",
       "      <td>38</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>NO</td>\n",
       "      <td>Nitrogen monoxide</td>\n",
       "      <td>42R801</td>\n",
       "      <td>Borgerhout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>10750</td>\n",
       "      <td>1722</td>\n",
       "      <td>38</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>NO</td>\n",
       "      <td>Nitrogen monoxide</td>\n",
       "      <td>47E704</td>\n",
       "      <td>Wachtebeke</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    serieid  siteid measureid serieunits measurekey  \\\n",
       "313   10866    1713      6002      µg/m³     PM-1.0   \n",
       "495   10814    1713     62106          %         RH   \n",
       "229    7073    1207        38      µg/m³         NO   \n",
       "364    6643    1124         5      µg/m³    PM-10.0   \n",
       "129    6955    1183         8      µg/m³        NO2   \n",
       "173   10837    1736        38      µg/m³         NO   \n",
       "46     6514    1112        10      mg/m³         CO   \n",
       "276    6969    1185         7      µg/m³         O3   \n",
       "200    6775    1147        38      µg/m³         NO   \n",
       "168   10750    1722        38      µg/m³         NO   \n",
       "\n",
       "                    measurename sitekey                   sitename  \n",
       "313   Particulate Matter < 1 µm  42R805      Antwerpen (Belgiëlei)  \n",
       "495           relative humidity  42R805      Antwerpen (Belgiëlei)  \n",
       "229           Nitrogen monoxide  44R701                       Gent  \n",
       "364  Particulate Matter < 10 µm  41WOL1                  Wol.St.L.  \n",
       "129            Nitrogen dioxide  43N113                 Sainte-Ode  \n",
       "173           Nitrogen monoxide  RMBX03      Bruxelles (Brouckere)  \n",
       "46              Carbon Monoxide  41B006   Bruxelles (Parlement UE)  \n",
       "276                       Ozone  43N132             Habay-La-Neuve  \n",
       "200           Nitrogen monoxide  42R801                 Borgerhout  \n",
       "168           Nitrogen monoxide  47E704                 Wachtebeke  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "meta = client.meta\n",
    "meta.sample(10).iloc[:,:8]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The complete list of available metadata is:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "serieid                     object\n",
       "siteid                       int64\n",
       "measureid                   object\n",
       "serieunits                  object\n",
       "measurekey                  object\n",
       "measurename                 object\n",
       "sitekey                     object\n",
       "sitename                    object\n",
       "seriekey                    object\n",
       "lat                        float64\n",
       "lon                        float64\n",
       "start          datetime64[ns, UTC]\n",
       "stop           datetime64[ns, UTC]\n",
       "dtype: object"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "meta.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The main columns we are concerned about are:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "keys = ['serieid', 'seriekey', 'measurekey', 'sitekey', 'measurename', 'sitename']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Selection \n",
    "\n",
    "From this, we can make a precise selection of measurement channels using the `select` method (`sitekey` starting by `41` are located in Brussels):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>serieid</th>\n",
       "      <th>seriekey</th>\n",
       "      <th>measurekey</th>\n",
       "      <th>sitekey</th>\n",
       "      <th>measurename</th>\n",
       "      <th>sitename</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>10607</td>\n",
       "      <td>BC/41R012 (µg/m³)</td>\n",
       "      <td>BC</td>\n",
       "      <td>41R012</td>\n",
       "      <td>Black Carbon</td>\n",
       "      <td>Uccle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>10693</td>\n",
       "      <td>BC/41N043 (µg/m³)</td>\n",
       "      <td>BC</td>\n",
       "      <td>41N043</td>\n",
       "      <td>Black Carbon</td>\n",
       "      <td>Haren</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>6569</td>\n",
       "      <td>BC/41R001 (µg/m³)</td>\n",
       "      <td>BC</td>\n",
       "      <td>41R001</td>\n",
       "      <td>Black Carbon</td>\n",
       "      <td>Molenbeek-Saint-Jean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>6609</td>\n",
       "      <td>BC/41R002 (µg/m³)</td>\n",
       "      <td>BC</td>\n",
       "      <td>41R002</td>\n",
       "      <td>Black Carbon</td>\n",
       "      <td>Ixelles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>6633</td>\n",
       "      <td>BC/41WOL1 (µg/m³)</td>\n",
       "      <td>BC</td>\n",
       "      <td>41WOL1</td>\n",
       "      <td>Black Carbon</td>\n",
       "      <td>Wol.St.L.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>575</th>\n",
       "      <td>99941</td>\n",
       "      <td>T/41R012 (°C)</td>\n",
       "      <td>T</td>\n",
       "      <td>41R012</td>\n",
       "      <td>temperature</td>\n",
       "      <td>Uccle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>581</th>\n",
       "      <td>99915</td>\n",
       "      <td>WD/41R001 (°G)</td>\n",
       "      <td>WD</td>\n",
       "      <td>41R001</td>\n",
       "      <td>wind direction</td>\n",
       "      <td>Molenbeek-Saint-Jean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>582</th>\n",
       "      <td>99939</td>\n",
       "      <td>WD/41R012 (°G)</td>\n",
       "      <td>WD</td>\n",
       "      <td>41R012</td>\n",
       "      <td>wind direction</td>\n",
       "      <td>Uccle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587</th>\n",
       "      <td>99916</td>\n",
       "      <td>WS/41R001 (m/s)</td>\n",
       "      <td>WS</td>\n",
       "      <td>41R001</td>\n",
       "      <td>wind speed (scalar)</td>\n",
       "      <td>Molenbeek-Saint-Jean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>588</th>\n",
       "      <td>99940</td>\n",
       "      <td>WS/41R012 (m/s)</td>\n",
       "      <td>WS</td>\n",
       "      <td>41R012</td>\n",
       "      <td>wind speed (scalar)</td>\n",
       "      <td>Uccle</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>74 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    serieid           seriekey measurekey sitekey          measurename  \\\n",
       "14    10607  BC/41R012 (µg/m³)         BC  41R012         Black Carbon   \n",
       "17    10693  BC/41N043 (µg/m³)         BC  41N043         Black Carbon   \n",
       "29     6569  BC/41R001 (µg/m³)         BC  41R001         Black Carbon   \n",
       "30     6609  BC/41R002 (µg/m³)         BC  41R002         Black Carbon   \n",
       "31     6633  BC/41WOL1 (µg/m³)         BC  41WOL1         Black Carbon   \n",
       "..      ...                ...        ...     ...                  ...   \n",
       "575   99941      T/41R012 (°C)          T  41R012          temperature   \n",
       "581   99915     WD/41R001 (°G)         WD  41R001       wind direction   \n",
       "582   99939     WD/41R012 (°G)         WD  41R012       wind direction   \n",
       "587   99916    WS/41R001 (m/s)         WS  41R001  wind speed (scalar)   \n",
       "588   99940    WS/41R012 (m/s)         WS  41R012  wind speed (scalar)   \n",
       "\n",
       "                  sitename  \n",
       "14                   Uccle  \n",
       "17                   Haren  \n",
       "29    Molenbeek-Saint-Jean  \n",
       "30                 Ixelles  \n",
       "31               Wol.St.L.  \n",
       "..                     ...  \n",
       "575                  Uccle  \n",
       "581   Molenbeek-Saint-Jean  \n",
       "582                  Uccle  \n",
       "587   Molenbeek-Saint-Jean  \n",
       "588                  Uccle  \n",
       "\n",
       "[74 rows x 6 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sel = client.select(sitekey='41....',\n",
    "                    measurekey=['NO', 'O3', 'CO', 'SO2',\n",
    "                                'PM-', 'BC', 'RH', 'T$', 'W'])[keys]\n",
    "sel"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A complete overview of the selection is (table shows serie identifiers):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7\" ><thead>    <tr>        <th class=\"index_name level0\" >measurekey</th>        <th class=\"col_heading level0 col0\" >BC</th>        <th class=\"col_heading level0 col1\" >CO</th>        <th class=\"col_heading level0 col2\" >CO2</th>        <th class=\"col_heading level0 col3\" >NO</th>        <th class=\"col_heading level0 col4\" >NO2</th>        <th class=\"col_heading level0 col5\" >O3</th>        <th class=\"col_heading level0 col6\" >PM-10.0</th>        <th class=\"col_heading level0 col7\" >PM-2.5</th>        <th class=\"col_heading level0 col8\" >RH</th>        <th class=\"col_heading level0 col9\" >SO2</th>        <th class=\"col_heading level0 col10\" >T</th>        <th class=\"col_heading level0 col11\" >WD</th>        <th class=\"col_heading level0 col12\" >WS</th>    </tr>    <tr>        <th class=\"index_name level0\" >sitekey</th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                        <th id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7level0_row0\" class=\"row_heading level0 row0\" >41B001</th>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col0\" class=\"data row0 col0\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col1\" class=\"data row0 col1\" >6500</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col2\" class=\"data row0 col2\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col3\" class=\"data row0 col3\" >6503</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col4\" class=\"data row0 col4\" >6504</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col5\" class=\"data row0 col5\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col6\" class=\"data row0 col6\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col7\" class=\"data row0 col7\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col8\" class=\"data row0 col8\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col9\" class=\"data row0 col9\" >6502</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col10\" class=\"data row0 col10\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col11\" class=\"data row0 col11\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row0_col12\" class=\"data row0 col12\" >-</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7level0_row1\" class=\"row_heading level0 row1\" >41B004</th>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col0\" class=\"data row1 col0\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col1\" class=\"data row1 col1\" >6506</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col2\" class=\"data row1 col2\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col3\" class=\"data row1 col3\" >6507</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col4\" class=\"data row1 col4\" >6508</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col5\" class=\"data row1 col5\" >6509</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col6\" class=\"data row1 col6\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col7\" class=\"data row1 col7\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col8\" class=\"data row1 col8\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col9\" class=\"data row1 col9\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col10\" class=\"data row1 col10\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col11\" class=\"data row1 col11\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row1_col12\" class=\"data row1 col12\" >-</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7level0_row2\" class=\"row_heading level0 row2\" >41B006</th>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col0\" class=\"data row2 col0\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col1\" class=\"data row2 col1\" >6514</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col2\" class=\"data row2 col2\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col3\" class=\"data row2 col3\" >6515</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col4\" class=\"data row2 col4\" >6516</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col5\" class=\"data row2 col5\" >6517</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col6\" class=\"data row2 col6\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col7\" class=\"data row2 col7\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col8\" class=\"data row2 col8\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col9\" class=\"data row2 col9\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col10\" class=\"data row2 col10\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col11\" class=\"data row2 col11\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row2_col12\" class=\"data row2 col12\" >-</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7level0_row3\" class=\"row_heading level0 row3\" >41B008</th>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col0\" class=\"data row3 col0\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col1\" class=\"data row3 col1\" >10616</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col2\" class=\"data row3 col2\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col3\" class=\"data row3 col3\" >10613</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col4\" class=\"data row3 col4\" >10614</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col5\" class=\"data row3 col5\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col6\" class=\"data row3 col6\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col7\" class=\"data row3 col7\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col8\" class=\"data row3 col8\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col9\" class=\"data row3 col9\" >10615</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col10\" class=\"data row3 col10\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col11\" class=\"data row3 col11\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row3_col12\" class=\"data row3 col12\" >-</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7level0_row4\" class=\"row_heading level0 row4\" >41B011</th>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col0\" class=\"data row4 col0\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col1\" class=\"data row4 col1\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col2\" class=\"data row4 col2\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col3\" class=\"data row4 col3\" >6527</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col4\" class=\"data row4 col4\" >6528</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col5\" class=\"data row4 col5\" >6530</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col6\" class=\"data row4 col6\" >6531</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col7\" class=\"data row4 col7\" >6532</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col8\" class=\"data row4 col8\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col9\" class=\"data row4 col9\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col10\" class=\"data row4 col10\" >99914</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col11\" class=\"data row4 col11\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row4_col12\" class=\"data row4 col12\" >-</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7level0_row5\" class=\"row_heading level0 row5\" >41MEU1</th>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col0\" class=\"data row5 col0\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col1\" class=\"data row5 col1\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col2\" class=\"data row5 col2\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col3\" class=\"data row5 col3\" >6550</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col4\" class=\"data row5 col4\" >6551</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col5\" class=\"data row5 col5\" >10766</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col6\" class=\"data row5 col6\" >6552</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col7\" class=\"data row5 col7\" >6553</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col8\" class=\"data row5 col8\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col9\" class=\"data row5 col9\" >6549</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col10\" class=\"data row5 col10\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col11\" class=\"data row5 col11\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row5_col12\" class=\"data row5 col12\" >-</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7level0_row6\" class=\"row_heading level0 row6\" >41N043</th>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col0\" class=\"data row6 col0\" >10693</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col1\" class=\"data row6 col1\" >6558</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col2\" class=\"data row6 col2\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col3\" class=\"data row6 col3\" >6560</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col4\" class=\"data row6 col4\" >6561</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col5\" class=\"data row6 col5\" >6562</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col6\" class=\"data row6 col6\" >6563</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col7\" class=\"data row6 col7\" >6564</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col8\" class=\"data row6 col8\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col9\" class=\"data row6 col9\" >6559</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col10\" class=\"data row6 col10\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col11\" class=\"data row6 col11\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row6_col12\" class=\"data row6 col12\" >-</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7level0_row7\" class=\"row_heading level0 row7\" >41R001</th>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col0\" class=\"data row7 col0\" >6569</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col1\" class=\"data row7 col1\" >6571</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col2\" class=\"data row7 col2\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col3\" class=\"data row7 col3\" >6573</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col4\" class=\"data row7 col4\" >6574</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col5\" class=\"data row7 col5\" >6577</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col6\" class=\"data row7 col6\" >6578</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col7\" class=\"data row7 col7\" >6579</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col8\" class=\"data row7 col8\" >10793</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col9\" class=\"data row7 col9\" >6572</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col10\" class=\"data row7 col10\" >99917</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col11\" class=\"data row7 col11\" >99915</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row7_col12\" class=\"data row7 col12\" >99916</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7level0_row8\" class=\"row_heading level0 row8\" >41R002</th>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col0\" class=\"data row8 col0\" >6609</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col1\" class=\"data row8 col1\" >6611</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col2\" class=\"data row8 col2\" >6612</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col3\" class=\"data row8 col3\" >6614</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col4\" class=\"data row8 col4\" >6615</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col5\" class=\"data row8 col5\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col6\" class=\"data row8 col6\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col7\" class=\"data row8 col7\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col8\" class=\"data row8 col8\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col9\" class=\"data row8 col9\" >6613</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col10\" class=\"data row8 col10\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col11\" class=\"data row8 col11\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row8_col12\" class=\"data row8 col12\" >-</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7level0_row9\" class=\"row_heading level0 row9\" >41R012</th>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col0\" class=\"data row9 col0\" >10607</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col1\" class=\"data row9 col1\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col2\" class=\"data row9 col2\" >6619</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col3\" class=\"data row9 col3\" >6621</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col4\" class=\"data row9 col4\" >6622</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col5\" class=\"data row9 col5\" >6625</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col6\" class=\"data row9 col6\" >6626</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col7\" class=\"data row9 col7\" >6627</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col8\" class=\"data row9 col8\" >10794</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col9\" class=\"data row9 col9\" >6620</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col10\" class=\"data row9 col10\" >99941</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col11\" class=\"data row9 col11\" >99939</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row9_col12\" class=\"data row9 col12\" >99940</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7level0_row10\" class=\"row_heading level0 row10\" >41WOL1</th>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col0\" class=\"data row10 col0\" >6633</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col1\" class=\"data row10 col1\" >6635</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col2\" class=\"data row10 col2\" >6636</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col3\" class=\"data row10 col3\" >6638</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col4\" class=\"data row10 col4\" >6639</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col5\" class=\"data row10 col5\" >6642</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col6\" class=\"data row10 col6\" >6643</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col7\" class=\"data row10 col7\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col8\" class=\"data row10 col8\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col9\" class=\"data row10 col9\" >6637</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col10\" class=\"data row10 col10\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col11\" class=\"data row10 col11\" >-</td>\n",
       "                        <td id=\"T_4b2682d2_8149_11ea_b3b3_e86a64d52fe7row10_col12\" class=\"data row10 col12\" >-</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x128929793c8>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sel.pivot_table(index='sitekey', columns='measurekey',\n",
    "                values='serieid', aggfunc='first')\\\n",
    "   .style.format('{}', na_rep='-')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Records\n",
    "\n",
    "Using the selection done above, we can fetch records on a defined time range using the `get_records` method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "recs = client.get_records(sel, start='2014-01-01 00:00:00+0100',\n",
    "                          stop='2015-01-01 00:00:00+0100')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We localize timestamps to the rightful timezone (`odapi` enforces Time Zone to be located in UTC internally):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "recs['start'] = recs['start'].dt.tz_convert('CET')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We pivot records to align Time Series and ensure time axis is regular:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = recs.merge(sel[keys])\n",
    "data = data.pivot_table(index='start',\n",
    "                        columns=['seriekey', 'sitekey', 'measurekey', 'serieid'],\n",
    "                        values='value')\n",
    "data = data.resample('1H').first()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A selection of final dataframe looks like:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th>seriekey</th>\n",
       "      <th>NO/41R001 (µg/m³)</th>\n",
       "      <th>NO/41R002 (µg/m³)</th>\n",
       "      <th>NO2/41R001 (µg/m³)</th>\n",
       "      <th>NO2/41R002 (µg/m³)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sitekey</th>\n",
       "      <th>41R001</th>\n",
       "      <th>41R002</th>\n",
       "      <th>41R001</th>\n",
       "      <th>41R002</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>measurekey</th>\n",
       "      <th>NO</th>\n",
       "      <th>NO</th>\n",
       "      <th>NO2</th>\n",
       "      <th>NO2</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>serieid</th>\n",
       "      <th>6573</th>\n",
       "      <th>6614</th>\n",
       "      <th>6574</th>\n",
       "      <th>6615</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>start</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2014-12-31 19:00:00+01:00</th>\n",
       "      <td>95.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>91.0</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-31 20:00:00+01:00</th>\n",
       "      <td>52.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>69.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-31 21:00:00+01:00</th>\n",
       "      <td>29.5</td>\n",
       "      <td>33.5</td>\n",
       "      <td>62.0</td>\n",
       "      <td>60.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-31 22:00:00+01:00</th>\n",
       "      <td>32.5</td>\n",
       "      <td>34.5</td>\n",
       "      <td>60.5</td>\n",
       "      <td>57.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-31 23:00:00+01:00</th>\n",
       "      <td>43.5</td>\n",
       "      <td>30.5</td>\n",
       "      <td>57.5</td>\n",
       "      <td>48.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "seriekey                  NO/41R001 (µg/m³) NO/41R002 (µg/m³)  \\\n",
       "sitekey                              41R001            41R002   \n",
       "measurekey                               NO                NO   \n",
       "serieid                                6573              6614   \n",
       "start                                                           \n",
       "2014-12-31 19:00:00+01:00              95.0              55.0   \n",
       "2014-12-31 20:00:00+01:00              52.0              52.0   \n",
       "2014-12-31 21:00:00+01:00              29.5              33.5   \n",
       "2014-12-31 22:00:00+01:00              32.5              34.5   \n",
       "2014-12-31 23:00:00+01:00              43.5              30.5   \n",
       "\n",
       "seriekey                  NO2/41R001 (µg/m³) NO2/41R002 (µg/m³)  \n",
       "sitekey                               41R001             41R002  \n",
       "measurekey                               NO2                NO2  \n",
       "serieid                                 6574               6615  \n",
       "start                                                            \n",
       "2014-12-31 19:00:00+01:00               91.0               75.0  \n",
       "2014-12-31 20:00:00+01:00               73.0               69.5  \n",
       "2014-12-31 21:00:00+01:00               62.0               60.5  \n",
       "2014-12-31 22:00:00+01:00               60.5               57.5  \n",
       "2014-12-31 23:00:00+01:00               57.5               48.5  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.filter(regex='NO.*/41R00(1|2)').tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And finally, we draw some Time Series:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "for k in ['BC', 'NO']:#data.columns.levels[2]:\n",
    "    axe = data.filter(regex='{}/'.format(k)).droplevel([1,2,3], axis=1).plot()\n",
    "    axe.set_title(\"Time Series\")\n",
    "    axe.set_xlabel(\"Time, $t$\")\n",
    "    axe.set_ylabel(\"Series, $x(t)$\")\n",
    "    lgd = axe.legend(bbox_to_anchor=(1, 1), loc='upper left')\n",
    "    axe.grid(which='both', color='lightgray')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We store the final dataframe for subseqent examples (see next notebooks):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.to_pickle(\"dump/brussels_2014.pickle\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
